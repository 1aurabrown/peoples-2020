@import './responsive';

/*============= Responsive Display ================*/

@include responsive-display-helper;
@include responsive-text-align-helper;
@include responsive-helpers;

/*================ Build Responsive Grid Classes ================*/
@each $breakpoint in $breakpoints-has-widths {
  .test-class {
    color: $breakpoint;
  }
  @include media-query($breakpoint) {
    @include responsive-display-helper('#{$breakpoint}--');
    @include responsive-text-align-helper('#{$breakpoint}--');
    @include responsive-helpers('#{$breakpoint}--');
  }
}

.half-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: auto;
  direction: ltr;
  grid-gap: var(--padding);

  @include media-query($small) {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
  }

  > .grid-item {
    grid-column: span 1;
  }
}

.no-gap {
  grid-gap: unset;
}

.grid-reverse {
  direction: rtl;
}

/*============= Flex Layout ================*/
.fdr {
  display: flex;
  flex-direction: row;
}

.fdr-rev {
  display: flex;
  flex-direction: row-reverse;
}

.fdc {
  display: flex;
  flex-direction: column;
}

.fdc-m {
  @include media-query($small) {
    display: flex;
    flex-direction: column;
  }
}

.f-wrap {
  flex-wrap: wrap;
}

/*============== Layout ================*/

.abs-c {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

// full height minus header
.min-full-height {
  min-height: var(--full-height);
}

.max-full-height {
  max-height: var(--full-height);
}

.full-height {
  height: var(--full-height);
}

// full height minus header and padding

.min-padded-full-height {
  min-height: var(--padded-full-height);
}

.max-padded-full-height {
  max-height: var(--padded-full-height);
}

.padded-full-height {
  height: var(--padded-full-height);
}


.half-width {
  width: 50%;
  @include media-query($small) {
    width: 100%;
  }
}

/*============= Helpers ================*/

.bg-black {
  background-color: $black;
}

.bg-white {
  background-color: $white;
}

.visually-hidden {
  @include visually-hidden;
}

.js-focus-hidden:focus {
  outline: none;
}

.label-hidden {
  @include visually-hidden;

  // No placeholders, so force show labels
  .no-placeholder & {
    @include visually-shown;
  }
}

.visually-shown {
  @include visually-shown;
}

// Only show when JS is not supported
.no-js:not(html) {
  display: none;

  .no-js & {
    display: block;
  }
}

// Only show when JS is supported
.js {
  .no-js & {
    display: none;
  }
}

// Skip to content button
// Overrides .visually-hidden when focused
.skip-link:focus {
  @include visually-shown(absolute);
  z-index: 10000;
  transition: none;
}

.hide {
  /* stylelint-disable declaration-no-important */
  display: none !important;
}

.f-1 {
  flex: 1;
}

.cursor-pointer {
  cursor: pointer;
}

.overflow-hidden {
  overflow: hidden;
}

.object-cover {
  object-fit: cover;
}

.object-contain {
  object-fit: contain;
}

.pointer-none {
  pointer-events: none;
}

.hidden {
  visibility: hidden;
}

.enlarge-click {
  @include enlarge-click;
}

.faux-underline {
  @include faux-underline;
}


.strikethrough {
  @include faux-strikethrough;
}

.max-w-large {
  max-width: $grid-large;
}
